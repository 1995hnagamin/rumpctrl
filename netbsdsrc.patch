diff --git a/lib/libc/Makefile b/lib/libc/Makefile
index 17455ff..317cebd 100644
--- a/lib/libc/Makefile
+++ b/lib/libc/Makefile
@@ -52,7 +52,7 @@ SUBDIR=compat
 .include <bsd.subdir.mk>
 .else
 COMPATDIR=${.CURDIR}/compat
-.include "${.CURDIR}/compat/Makefile.inc"
+# .include "${.CURDIR}/compat/Makefile.inc"
 # Marker for compat code that can't be easily isolated
 CPPFLAGS+=	-D__BUILD_LEGACY
 .endif
@@ -62,7 +62,7 @@ CPPFLAGS+=	-D__BUILD_LEGACY
 .include "${.CURDIR}/cdb/Makefile.inc"
 .include "${.CURDIR}/db/Makefile.inc"
 .include "${.CURDIR}/citrus/Makefile.inc"
-.include "${.CURDIR}/compat-43/Makefile.inc"
+# .include "${.CURDIR}/compat-43/Makefile.inc"
 .include "${.CURDIR}/compiler_rt/Makefile.inc"
 .include "${.CURDIR}/dlfcn/Makefile.inc"
 .include "${.CURDIR}/gdtoa/Makefile.inc"
@@ -84,7 +84,7 @@ CPPFLAGS+=	-D__BUILD_LEGACY
 .include "${.CURDIR}/regex/Makefile.inc"
 .endif
 .include "${.CURDIR}/resolv/Makefile.inc"
-.include "${.CURDIR}/rpc/Makefile.inc"
+# .include "${.CURDIR}/rpc/Makefile.inc"
 .include "${.CURDIR}/ssp/Makefile.inc"
 .include "${.CURDIR}/stdio/Makefile.inc"
 .include "${.CURDIR}/stdlib/Makefile.inc"
@@ -92,8 +92,13 @@ CPPFLAGS+=	-D__BUILD_LEGACY
 .include "${.CURDIR}/termios/Makefile.inc"
 .include "${.CURDIR}/thread-stub/Makefile.inc"
 .include "${.CURDIR}/time/Makefile.inc"
-.include "${.CURDIR}/tls/Makefile.inc"
-.include "${.CURDIR}/sys/Makefile.inc"
+# .include "${.CURDIR}/tls/Makefile.inc"
+
+# We want just a few wrappers out of libc/sys
+# .include "${.CURDIR}/sys/Makefile.inc"
+.PATH: ${.CURDIR}/sys
+SRCS+=  posix_fadvise.c statvfs.c semctl.c
+
 .if ${HAVE_LIBGCC_EH} == "no"
 .include "${NETBSDSRCDIR}/sys/lib/libunwind/Makefile.inc"
 .endif
@@ -122,32 +127,31 @@ LSRCS := ${LSRCS} ${unwanted_file}
 .endif
 .endfor
 
-NLS=	C.msg Pig.msg ca.msg cs.msg de.msg es.msg fi.msg fr.msg nl.msg \
-	no.msg pl.msg sk.msg sv.msg
-
-.if ${MKREPRO:Uno} == "yes"
-REGEX_SPECIALS=[][)(^$$.?*\\;]
-MKREPRO_SED=   -e 's;${NETBSDSRCDIR:C/${REGEX_SPECIALS}/\\\\&/g};/usr/src;'
-.endif
-
-realall: tags
-tags: ${SRCS}
-	${_MKTARGET_CREATE}
-	-${TOOL_CTAGS} -f ${.TARGET}.tmp -w ${.ALLSRC:M*.c}
-	-egrep "^ENTRY(.*)|^FUNC(.*)|^SYSCALL(.*)" /dev/null ${.ALLSRC:M*.S} | \
-	    sed "s;\([^:]*\):\([^(]*\)(\([^, )]*\)\(.*\);\3 \1 /^\2(\3\4$$/;" \
-           >> ${.TARGET}.tmp
-.if ${MKREPRO:Uno} == "yes"
-	sed ${MKREPRO_SED} <${.TARGET}.tmp | sort -o ${.TARGET}
-.else
-	sort -o ${.TARGET} ${.TARGET}.tmp
-.endif
-	rm -f ${.TARGET}.tmp
-
-FILES=		tags
-FILESNAME=	libc.tags
-FILESDIR=	/var/db
-
+#NLS=	C.msg Pig.msg ca.msg cs.msg de.msg es.msg fi.msg fr.msg nl.msg \
+#	no.msg pl.msg sk.msg sv.msg
+#
+#.if ${MKREPRO:Uno} == "yes"
+#REGEX_SPECIALS=[][)(^$$.?*\\;]
+#MKREPRO_SED=   -e 's;${NETBSDSRCDIR:C/${REGEX_SPECIALS}/\\\\&/g};/usr/src;'
+#.endif
+
+#realall: tags
+#tags: ${SRCS}
+#	${_MKTARGET_CREATE}
+#	-${TOOL_CTAGS} -f ${.TARGET}.tmp -w ${.ALLSRC:M*.c}
+#	-egrep "^ENTRY(.*)|^FUNC(.*)|^SYSCALL(.*)" /dev/null ${.ALLSRC:M*.S} | \
+#	    sed "s;\([^:]*\):\([^(]*\)(\([^, )]*\)\(.*\);\3 \1 /^\2(\3\4$$/;" \
+#           >> ${.TARGET}.tmp
+#.if ${MKREPRO:Uno} == "yes"
+#	sed ${MKREPRO_SED} <${.TARGET}.tmp | sort -o ${.TARGET}
+#.else
+#	sort -o ${.TARGET} ${.TARGET}.tmp
+#.endif
+#	rm -f ${.TARGET}.tmp
+#
+#FILES=		tags
+#FILESNAME=	libc.tags
+#FILESDIR=	/var/db
 
 # workaround for I18N stuffs: build singlebyte setlocale() for libc.a,
 # multibyte for libc.so.  the quirk should be removed when we support
@@ -158,6 +162,9 @@ CSHLIBFLAGS+=	-D_I18N_DYNAMIC
 
 # force the dynamic linker to initialize libc first
 SHLIB_SHFLAGS+=	-Wl,-z,initfirst
+
+# XXX: makecontext()
+CFLAGS+= -Wno-strict-prototypes
 .if ${HAVE_LIBGCC} == "no"
 SHLIB_SHFLAGS+= -Wl,-z,defs
 .endif
diff --git a/lib/libc/arch/i386/Makefile.inc b/lib/libc/arch/i386/Makefile.inc
index 6b78a3b..703a622 100644
--- a/lib/libc/arch/i386/Makefile.inc
+++ b/lib/libc/arch/i386/Makefile.inc
@@ -1,3 +1,3 @@
 #	$NetBSD: Makefile.inc,v 1.20 2006/06/17 18:04:23 uwe Exp $
 
-SRCS+=	__sigaction14_sigtramp.c __sigtramp2.S
+#SRCS+=	__sigaction14_sigtramp.c __sigtramp2.S
diff --git a/lib/libc/arch/x86_64/Makefile.inc b/lib/libc/arch/x86_64/Makefile.inc
index b4b415e..4d926e6 100644
--- a/lib/libc/arch/x86_64/Makefile.inc
+++ b/lib/libc/arch/x86_64/Makefile.inc
@@ -1,3 +1,3 @@
 #	$NetBSD: Makefile.inc,v 1.5 2006/06/17 18:04:24 uwe Exp $
 
-SRCS+=	__sigaction14_sigtramp.c __sigtramp2.S
+# SRCS+=	__sigaction14_sigtramp.c __sigtramp2.S
diff --git a/lib/libc/citrus/Makefile.inc b/lib/libc/citrus/Makefile.inc
index abab175..e7c45b8 100644
--- a/lib/libc/citrus/Makefile.inc
+++ b/lib/libc/citrus/Makefile.inc
@@ -3,8 +3,9 @@
 # sources
 .PATH: ${ARCHDIR}/citrus ${.CURDIR}/citrus
 
-MODULE_SHLIB_MAJOR!= . ${NETBSDSRCDIR}/lib/i18n_module/shlib_version ; echo $$major
-CPPFLAGS.citrus_module.c+=-DI18NMODULE_MAJOR=${MODULE_SHLIB_MAJOR}
+#MODULE_SHLIB_MAJOR!= . ${NETBSDSRCDIR}/lib/i18n_module/shlib_version ; echo $$major
+#CPPFLAGS.citrus_module.c+=-DI18NMODULE_MAJOR=${MODULE_SHLIB_MAJOR}
+CPPFLAGS.citrus_module.c+=-DI18NMODULE_MAJOR=0
 SRCS+=	citrus_bcs.c citrus_bcs_strtol.c citrus_bcs_strtoul.c \
 	citrus_csmapper.c citrus_ctype.c citrus_ctype_fallback.c \
 	citrus_db.c citrus_db_hash.c citrus_esdb.c citrus_hash.c \
diff --git a/lib/libc/gen/Makefile.inc b/lib/libc/gen/Makefile.inc
index 79abbd4..cd97d11 100644
--- a/lib/libc/gen/Makefile.inc
+++ b/lib/libc/gen/Makefile.inc
@@ -4,7 +4,9 @@
 # gen sources
 .PATH: ${ARCHDIR}/gen ${.CURDIR}/gen
 
-SRCS+= 	_errno.c alarm.c alphasort.c arc4random.c assert.c basename.c clock.c \
+#SRCS+=	_errno.c
+
+SRCS+= 	alarm.c alphasort.c arc4random.c assert.c basename.c clock.c \
 	closedir.c closefrom.c \
 	confstr.c ctermid.c ctype_.c daemon.c \
 	dehumanize_number.c devname.c dirname.c disklabel.c err.c errx.c \
diff --git a/lib/libc/misc/initfini.c b/lib/libc/misc/initfini.c
index 57810e4..05583e8 100644
--- a/lib/libc/misc/initfini.c
+++ b/lib/libc/misc/initfini.c
@@ -99,10 +99,13 @@ _libc_init(void)
 	/* Atomic operations */
 	__libc_atomic_init();
 
+/* XXX: we don't have tls */
+#if 0
 #if defined(__HAVE_TLS_VARIANT_I) || defined(__HAVE_TLS_VARIANT_II)
 	/* Initialize TLS for statically linked programs. */
 	__libc_static_tls_setup();
 #endif
+#endif
 
 	/* Threads */
 	__libc_thr_init();
diff --git a/lib/libc/net/Makefile.inc b/lib/libc/net/Makefile.inc
index 08b3b66..644a2c9 100644
--- a/lib/libc/net/Makefile.inc
+++ b/lib/libc/net/Makefile.inc
@@ -12,7 +12,7 @@ SRCS+=	base64.c ethers.c gethnamaddr.c getifaddrs.c \
 	getservbyname_r.c getservbyport_r.c getservent_r.c \
 	iso_addr.c linkaddr.c \
 	nsdispatch.c nslexer.l nsparser.y nsap_addr.c \
-	rcmd.c recv.c send.c sethostent.c \
+	recv.c send.c sethostent.c \
 	sockatmark.c
 
 .if (${MKHESIOD} != "no")
diff --git a/lib/libc/stdlib/Makefile.inc b/lib/libc/stdlib/Makefile.inc
index dbea35b..cc0051b 100644
--- a/lib/libc/stdlib/Makefile.inc
+++ b/lib/libc/stdlib/Makefile.inc
@@ -24,11 +24,12 @@ SRCS+=	div.c ldiv.c imaxdiv.c
 # This might be replaced by erand48.c
 SRCS+= erand48_ieee754.c
 
-.if (${USE_JEMALLOC} != "no")
-SRCS+=	jemalloc.c
-.else
-SRCS+=	malloc.c
-.endif
+# no malloc at all
+#.if (${USE_JEMALLOC} != "no")
+#SRCS+=	jemalloc.c
+#.else
+#SRCS+=	malloc.c
+#.endif
 
 CPPFLAGS.strtol.c+=	-I${LIBCDIR}/../../common/lib/libc/stdlib
 CPPFLAGS.strtoq.c+=	-I${LIBCDIR}/../../common/lib/libc/stdlib
diff --git a/lib/libutil/Makefile b/lib/libutil/Makefile
index 2070310..ba4ea08 100644
--- a/lib/libutil/Makefile
+++ b/lib/libutil/Makefile
@@ -38,7 +38,7 @@ MAN=	efun.3 \
 YPREFIX=__pd
 .PATH:	${NETBSDSRCDIR}/lib/libc/gen
 
-.include "compat/Makefile.inc"
+#.include "compat/Makefile.inc"
 
 MLINKS+=getlabelsector.3 getlabeloffset.3
 MLINKS+=getlabelsector.3 getlabelusesmbr.3
